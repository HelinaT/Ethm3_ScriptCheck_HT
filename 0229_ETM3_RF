#' randomForest predictions of nutrient mass balance variables with spatial covariates
#' EthioSIS Mehlich-3 extractable P,K,S,Ca & Mg, from 255 Woredas
#' M. Walsh, December 2015

# Required packages
# install.packages(c("devtools","caret","doParallel","randomForest","raster")), dependencies=TRUE)
require(devtools)
require(caret)
require(doParallel)
require(randomForest)
require(raster)

# Data setup --------------------------------------------------------------
# SourceURL <- "https://raw.githubusercontent.com/mgwalsh/Ethiopia/blob/master/ETM3_setup.R"
# source_url(SourceURL)
setwd("D:/2_ATA/0_Soil_Fertility_Status/2_Amhara/2016_0229")
source("0229_ETM3_Setup.R")

# Mehlich-3 nutrient mass balance variables
V0 <- EthM3_cal$V0
V1 <- EthM3_cal$V1
V2 <- EthM3_cal$V2
V3 <- EthM3_cal$V3
V4 <- EthM3_cal$V4
V5 <- EthM3_cal$V5
V6 <- EthM3_cal$V6
V7 <- EthM3_cal$V7
V8 <- EthM3_cal$V8
V9 <- EthM3_cal$V9
V10 <- EthM3_cal$V10
V11 <- EthM3_cal$V11

# Gridded covariates
names(EthM3)
GRIDSc <- EthM3_cal[c(32:59)] ## Gridded covariates for model calibration from 273 Woredas
GRIDSv <- EthM3_val[c(32:59)] ## Same for 69 randomly selected validation Woredas

# Random Forest models ----------------------------------------------------
# Start foreach to parallelize model fitting
mc <- makeCluster(detectCores())
registerDoParallel(mc)

# Control setup
set.seed(1385321)
tc <- trainControl(method = "oob", allowParallel = TRUE)

# V0 = ilr [C, N, P, K, Ca, Mg, S, B, Cu, Zn, Mn, Fe | Fv]
V0.rf <- train(GRIDSc, V0, method = "rf", preProc = c("center", "scale"), trControl = tc)
print(V0.rf)

###v0.imp <- varImp(V0.rf, useModel = FALSE)
###plot(v0.imp, top=28)

# V1 = ilr [B, C, N, P, K, S, Ca, Mg | Cu, Zn, Mn, Fe]
V1.rf <- train(GRIDSc, V1, method = "rf", preProc = c("center", "scale"), trControl = tc)
print(V1.rf)

# V2 = ilr [P, K, S, Ca, Mg | B, C, N ]
V2.rf <- train(GRIDSc, V2, method = "rf", preProc = c("center", "scale"), trControl = tc)
print(V2.rf)

# V3 = ilr [P, S | K, Ca, Mg]
V3.rf <- train(GRIDSc, V3, method = "rf", preProc = c("center", "scale"), trControl = tc)
print(V3.rf) 

# V4 = ilr [K | Ca, Mg]
V4.rf <- train(GRIDSc, V4, method = "rf", preProc = c("center", "scale"), trControl = tc)
print(V4.rf)
 
# V5 = ilr [P | S]
V5.rf <- train(GRIDSc, V5, method = "rf", preProc = c("center", "scale"), trControl = tc)
print(V5.rf)

# V6 = ilr [Ca | Mg]
V6.rf <- train(GRIDSc, V6, method = "rf", preProc = c("center", "scale"), trControl = tc)
print(V6.rf)

# V7 = ilr [B | C, N]
V7.rf <- train(GRIDSc, V7, method = "rf", preProc = c("center", "scale"), trControl = tc)
print(V7.rf)

# V8 = ilr [C | N]
V8.rf <- train(GRIDSc, V8, method = "rf", preProc = c("center", "scale"), trControl = tc)
print(V8.rf)

# V9 = ilr [Cu, Zn | Mn, Fe]
V9.rf <- train(GRIDSc, V9, method = "rf", preProc = c("center", "scale"), trControl = tc)
print(V9.rf)

# V10 = ilr [Mn | Fe]
V10.rf <- train(GRIDSc, V10, method = "rf", preProc = c("center", "scale"), trControl = tc)
print(V10.rf)

# V11 = ilr [Cu | Zn]
V11.rf <- train(GRIDSc, V11, method = "rf", preProc = c("center", "scale"), trControl = tc)
print(V11.rf)

stopCluster(mc)

# Test set predictions ----------------------------------------------------
V0_rf <- predict(V0.rf, GRIDSv)
V1_rf <- predict(V1.rf, GRIDSv)
V2_rf <- predict(V2.rf, GRIDSv)
V3_rf <- predict(V3.rf, GRIDSv)
V4_rf <- predict(V4.rf, GRIDSv)
V5_rf <- predict(V5.rf, GRIDSv)
V6_rf <- predict(V6.rf, GRIDSv)
V7_rf <- predict(V7.rf, GRIDSv)
V8_rf <- predict(V8.rf, GRIDSv)
V9_rf <- predict(V9.rf, GRIDSv)
V10_rf <- predict(V10.rf, GRIDSv)
V11_rf <- predict(V11.rf, GRIDSv)

pred <- cbind.data.frame(V0_rf,V1_rf,V2_rf,V3_rf,V4_rf,V5_rf,V6_rf,V7_rf,V8_rf,V9_rf,V10_rf,V11_rf)
head(pred)

test <- EthM3_val[c("PID","V0","V1","V2","V3","V4","V5","V6","V7","V8","V9","V10","V11")]
head(test)

rf_eval <- cbind(test, pred)
head(rf_eval)

x11()
par(mfrow=c(3,4))

plot(V0 ~ V0_rf, rf_eval)
plot(V1 ~ V1_rf, rf_eval)
plot(V2 ~ V2_rf, rf_eval)
plot(V3 ~ V3_rf, rf_eval)
plot(V4 ~ V4_rf, rf_eval)
plot(V5 ~ V5_rf, rf_eval)
plot(V6 ~ V6_rf, rf_eval)
plot(V7 ~ V7_rf, rf_eval)
plot(V8 ~ V8_rf, rf_eval)
plot(V9 ~ V9_rf, rf_eval)
plot(V10 ~ V10_rf, rf_eval)
plot(V11 ~ V11_rf, rf_eval)

# Gridded predictions -----------------------------------------------------
V0_rf <- predict(grids, V0.rf)
V1_rf <- predict(grids, V1.rf)
V2_rf <- predict(grids, V2.rf)
V3_rf <- predict(grids, V3.rf)
V4_rf <- predict(grids, V4.rf)
V5_rf <- predict(grids, V5.rf)
V6_rf <- predict(grids, V6.rf)
V7_rf <- predict(grids, V7.rf)
V8_rf <- predict(grids, V8.rf)
V9_rf <- predict(grids, V9.rf)
V10_rf <- predict(grids, V10.rf)
V11_rf <- predict(grids, V11.rf)

###rf_pred <- stack(V0_rf,V3_rf,V4_rf,V5_rf,V6_rf)
###names(rf_pred) <- c("V0_rf","V3_rf","V4_rf","V5_rf","V6_rf")
###plot(rf_pred)

# Export Gtif's -----------------------------------------------------------
# Create a "EthM3_Results" folder in current working directory
dir.create("EthM3_Results", showWarnings=F)

# Export Gtif's to "./EthM3_results"
###writeRaster(rf_pred, filename="./EthM3_Results/rf_preds.tif", datatype="FLT4S", options="INTERLEAVE=BAND", overwrite=T)

writeRaster(V0_rf, filename="./EthM3_Results/V0_rf.tif", datatype="FLT4S", options="INTERLEAVE=BAND", overwrite=T)
writeRaster(V1_rf, filename="./EthM3_Results/V1_rf.tif", datatype="FLT4S", options="INTERLEAVE=BAND", overwrite=T)
writeRaster(V2_rf, filename="./EthM3_Results/V2_rf.tif", datatype="FLT4S", options="INTERLEAVE=BAND", overwrite=T)
writeRaster(V3_rf, filename="./EthM3_Results/V3_rf.tif", datatype="FLT4S", options="INTERLEAVE=BAND", overwrite=T)
writeRaster(V4_rf, filename="./EthM3_Results/V4_rf.tif", datatype="FLT4S", options="INTERLEAVE=BAND", overwrite=T)
writeRaster(V5_rf, filename="./EthM3_Results/V5_rf.tif", datatype="FLT4S", options="INTERLEAVE=BAND", overwrite=T)
writeRaster(V6_rf, filename="./EthM3_Results/V6_rf.tif", datatype="FLT4S", options="INTERLEAVE=BAND", overwrite=T)
writeRaster(V7_rf, filename="./EthM3_Results/V7_rf.tif", datatype="FLT4S", options="INTERLEAVE=BAND", overwrite=T)
writeRaster(V8_rf, filename="./EthM3_Results/V8_rf.tif", datatype="FLT4S", options="INTERLEAVE=BAND", overwrite=T)
writeRaster(V9_rf, filename="./EthM3_Results/V9_rf.tif", datatype="FLT4S", options="INTERLEAVE=BAND", overwrite=T)
writeRaster(V10_rf, filename="./EthM3_Results/V10_rf.tif", datatype="FLT4S", options="INTERLEAVE=BAND", overwrite=T)
writeRaster(V11_rf, filename="./EthM3_Results/V11_rf.tif", datatype="FLT4S", options="INTERLEAVE=BAND", overwrite=T)
