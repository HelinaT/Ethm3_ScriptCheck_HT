#' Boosted regression predictions of nutrient mass balances with spatial covariates
#' EthioSIS Mehlich-3 extractable P,K,S,Ca & Mg data from 255 Woredas
#' M. Walsh, December 2015

# Required packages
# install.packages(c("devtools","caret","doParallel","plyr","gbm")), dependencies=TRUE)
require(devtools)
require(caret)
require(doParallel)
require(plyr)
require(gbm)
require(raster)

# Data setup --------------------------------------------------------------
# SourceURL <- "https://raw.githubusercontent.com/mgwalsh/Ethiopia/blob/master/ETM3_setup.R"
# source_url(SourceURL)

# Mehlich-3 nutrient mass balance variables
V0 <- etm3_cal$V0
V1 <- etm3_cal$V1
V2 <- etm3_cal$V2
V3 <- etm3_cal$V3
V4 <- etm3_cal$V4
V5 <- etm3_cal$V5
V6 <- etm3_cal$V6
V7 <- etm3_cal$V7
V8 <- etm3_cal$V8
V9 <- etm3_cal$V9
V10 <- etm3_cal$V10
V11 <- etm3_cal$V11


# Gridded covariates
GRIDSc <- etm3_cal[c(32:59)] ## gridded covariates for model calibration from 204 Woredas
GRIDSv <- etm3_val[c(32:59)] ## same for 51 randomly selected validation Woredas

# GBM models --------------------------------------------------------------
# Start foreach to parallelize model fitting
mc <- makeCluster(detectCores())
registerDoParallel(mc)

# Control setup
set.seed(1385321)
tc <- trainControl(method = "cv", number=10)

# V0 = ilr [P,K,S,Ca,Mg | Fv]
V0.gbm <- train(GRIDSc, V0, 
                method = "gbm", 
                preProc = c("center", "scale"),
                trControl = tc,
                tuneGrid = expand.grid(.n.trees=seq(50,500,by=50), 
                                       .interaction.depth = 3,
                                       .shrinkage = 0.1,
                                       .n.minobsinnode = 100))
print(V0.gbm)
v0.imp <- varImp(V0.gbm)
plot(v0.imp, top=28)

# V1 = ilr [P,K | K,Ca,Mg]
V1.gbm <- train(GRIDSc, V1, 
                method = "gbm", 
                preProc = c("center", "scale"),
                trControl = tc,
                tuneGrid = expand.grid(.n.trees=seq(50,500,by=50), 
                                       .interaction.depth = 3,
                                       .shrinkage = 0.1,
                                       .n.minobsinnode = 100))
print(V1.gbm)
v1.imp <- varImp(V1.gbm)
plot(v1.imp, top=28)

# V2 = ilr [K | Ca,Mg]
V2.gbm <- train(GRIDSc, V2, 
                method = "gbm", 
                preProc = c("center", "scale"),
                trControl = tc,
                tuneGrid = expand.grid(.n.trees=seq(50,500,by=50), 
                                       .interaction.depth = 3,
                                       .shrinkage = 0.1,
                                       .n.minobsinnode = 100))
print(V2.gbm)
v2.imp <- varImp(V2.gbm)
plot(v2.imp, top=28)

# V3 = ilr [P | S]
V3.gbm <- train(GRIDSc, V3, 
                method = "gbm", 
                preProc = c("center", "scale"),
                trControl = tc,
                tuneGrid = expand.grid(.n.trees=seq(50,500,by=50), 
                                       .interaction.depth = 3,
                                       .shrinkage = 0.1,
                                       .n.minobsinnode = 100))
print(V3.gbm)
v3.imp <- varImp(V3.gbm)
plot(v3.imp, top=28)

# V4 = ilr [Ca | Mg]
V4.gbm <- train(GRIDSc, V4, 
                method = "gbm", 
                preProc = c("center", "scale"),
                trControl = tc,
                tuneGrid = expand.grid(.n.trees=seq(50,500,by=50), 
                                       .interaction.depth = 3,
                                       .shrinkage = 0.1,
                                       .n.minobsinnode = 100))
print(V4.gbm)
v4.imp <- varImp(V4.gbm)
plot(v4.imp, top=28)

# V5 = ilr [Ca | Mg]
V5.gbm <- train(GRIDSc, V5, 
                method = "gbm", 
                preProc = c("center", "scale"),
                trControl = tc,
                tuneGrid = expand.grid(.n.trees=seq(50,500,by=50), 
                                       .interaction.depth = 3,
                                       .shrinkage = 0.1,
                                       .n.minobsinnode = 100))
print(V5.gbm)
v5.imp <- varImp(V5.gbm)
plot(v5.imp, top=28)

# V6 = ilr [Ca | Mg]
V6.gbm <- train(GRIDSc, V6, 
                method = "gbm", 
                preProc = c("center", "scale"),
                trControl = tc,
                tuneGrid = expand.grid(.n.trees=seq(50,500,by=50), 
                                       .interaction.depth = 3,
                                       .shrinkage = 0.1,
                                       .n.minobsinnode = 100))
print(V6.gbm)
v6.imp <- varImp(V6.gbm)
plot(v6.imp, top=28)

# V7 = ilr [Ca | Mg]
V7.gbm <- train(GRIDSc, V7, 
                method = "gbm", 
                preProc = c("center", "scale"),
                trControl = tc,
                tuneGrid = expand.grid(.n.trees=seq(50,500,by=50), 
                                       .interaction.depth = 3,
                                       .shrinkage = 0.1,
                                       .n.minobsinnode = 100))
print(V7.gbm)
v7.imp <- varImp(V7.gbm)
plot(v7.imp, top=28)

# V8 = ilr [Ca | Mg]
V8.gbm <- train(GRIDSc, V8, 
                method = "gbm", 
                preProc = c("center", "scale"),
                trControl = tc,
                tuneGrid = expand.grid(.n.trees=seq(50,500,by=50), 
                                       .interaction.depth = 3,
                                       .shrinkage = 0.1,
                                       .n.minobsinnode = 100))
print(V8.gbm)
v8.imp <- varImp(V8.gbm)
plot(v8.imp, top=28)

# V9 = ilr [Ca | Mg]
V9.gbm <- train(GRIDSc, V9, 
                method = "gbm", 
                preProc = c("center", "scale"),
                trControl = tc,
                tuneGrid = expand.grid(.n.trees=seq(50,500,by=50), 
                                       .interaction.depth = 3,
                                       .shrinkage = 0.1,
                                       .n.minobsinnode = 100))
print(V9.gbm)
v9.imp <- varImp(V9.gbm)
plot(v9.imp, top=28)

# V10 = ilr [Ca | Mg]
V10.gbm <- train(GRIDSc, V10, 
                method = "gbm", 
                preProc = c("center", "scale"),
                trControl = tc,
                tuneGrid = expand.grid(.n.trees=seq(50,500,by=50), 
                                       .interaction.depth = 3,
                                       .shrinkage = 0.1,
                                       .n.minobsinnode = 100))
print(V10.gbm)
v10.imp <- varImp(V10.gbm)
plot(v10.imp, top=28)

# V11 = ilr [Ca | Mg]
V11.gbm <- train(GRIDSc, V11, 
                 method = "gbm", 
                 preProc = c("center", "scale"),
                 trControl = tc,
                 tuneGrid = expand.grid(.n.trees=seq(50,500,by=50), 
                                        .interaction.depth = 3,
                                        .shrinkage = 0.1,
                                        .n.minobsinnode = 100))
print(V11.gbm)
v11.imp <- varImp(V11.gbm)
plot(v11.imp, top=28)


stopCluster(mc)

# Test set predictions ----------------------------------------------------
V0_gbm <- predict(V0.gbm, GRIDSv)
V1_gbm <- predict(V1.gbm, GRIDSv)
V2_gbm <- predict(V2.gbm, GRIDSv)
V3_gbm <- predict(V3.gbm, GRIDSv)
V4_gbm <- predict(V4.gbm, GRIDSv)
V5_gbm <- predict(V5.gbm, GRIDSv)
V6_gbm <- predict(V6.gbm, GRIDSv)
V7_gbm <- predict(V7.gbm, GRIDSv)
V8_gbm <- predict(V8.gbm, GRIDSv)
V9_gbm <- predict(V9.gbm, GRIDSv)
V10_gbm <- predict(V10.gbm, GRIDSv)
V11_gbm <- predict(V11.gbm, GRIDSv)
pred <- cbind.data.frame(V0_gbm,V1_gbm,V2_gbm,V3_gbm,V4_gbm,V5_gbm,V6_gbm,V7_gbm,V8_gbm,V9_gbm,V10_gbm,V11_gbm)
test <- etm3_val[c("PID","V0","V1","V2","V3","V4","V5","V6","V7","V8","V9","V10","V11")]
gbm_eval <- cbind(test, pred)

# Gridded predictions -----------------------------------------------------
V0_gbm <- predict(grids, V0.gbm)
V1_gbm <- predict(grids, V1.gbm)
V2_gbm <- predict(grids, V2.gbm)
V3_gbm <- predict(grids, V3.gbm)
V4_gbm <- predict(grids, V4.gbm)
V5_gbm <- predict(grids, V5.gbm)
V6_gbm <- predict(grids, V6.gbm)
V7_gbm <- predict(grids, V7.gbm)
V8_gbm <- predict(grids, V8.gbm)
V9_gbm <- predict(grids, V9.gbm)
V10_gbm <- predict(grids, V10.gbm)
V11_gbm <- predict(grids, V11.gbm)
gbm_pred <- stack(V0_gbm,V1_gbm,V2_gbm,V3_gbm,V4_gbm,V5_gbm,V6_gbm,V7_gbm,V8_gbm,V9_gbm,V10_gbm,V11_gbm)
names(gbm_pred) <- c("V0_gbm","V1_gbm","V2_gbm","V3_gbm","V4_gbm","V5_gbm","V6_gbm","V7_gbm","V8_gbm","V9_gbm","V10_gbm","V11_gbm")
plot(gbm_pred)

# Export Gtif's -----------------------------------------------------------
# Create a "Results" folder in current working directory
dir.create("ETM3_results", showWarnings=F)

# Export Gtif's to "./ETM3_results"
writeRaster(V11_gbm, filename="./ETM3_results/V11_gbm.tif", datatype="FLT4S", options="INTERLEAVE=BAND", overwrite=T)
